  # Clean up from any previous run of this file
  delete alignment srlv_All
  delete alignment AL_UNC_srlv_Tree_gag
  delete alignment AL_UNC_srlv_Tree_pol
  delete alignment AL_UNC_srlv_Tree_env
  
  delete module srlvFeaturePresenceRecorder
  delete module fastaAlignmentExporter
  delete module srlvTreeAlignmentImporterNucs
  delete module raxmlPhylogenyGenerator
  delete module srlvPhyloUtility
  delete module lentiFigTreeAnnotationExporter
  
  
  # Create all the modules we need
  create module -f modules/extension/featurePresenceRecorderSrlv.xml
  create module -f modules/extension/fastaAlignmentExporter.xml
  create module -f modules/extension/srlvTreeAlignmentImporterNucs.xml
  create module -f modules/extension/srlvPhyloUtility.xml
  create module -f modules/extension/lentiFigTreeAnnotationExporter.xml
  create module -t raxmlPhylogenyGenerator

  # Create alignment srlv sequences
  create alignment srlv_All -r REF_MASTER_srlv-A
  alignment srlv_All add member -w "source.name = 'ncbi-curated-srlv' and lab_construct = null"
  compute alignment srlv_All srlvCompoundAligner


  module srlvFeaturePresenceRecorder record feature-presence srlv_All --recursive --featureName whole_genome --descendentFeatures
  module fastaAlignmentExporter
	export srlv_All -w "fLocNotes.featureLoc.feature.name = 'gag' and fLocNotes.ref_nt_coverage_pct >= 60" -o alignments/tree/gag.export.aln.fna
	export srlv_All -w "fLocNotes.featureLoc.feature.name = 'pol' and fLocNotes.ref_nt_coverage_pct >= 60" -o alignments/tree/pol.export.aln.fna
	export srlv_All -w "fLocNotes.featureLoc.feature.name = 'env' and fLocNotes.ref_nt_coverage_pct >= 60" -o alignments/tree/env.export.aln.fna
	exit

  # Import the alignments to GLUE
  module srlvTreeAlignmentImporterNucs import AL_UNC_srlv_Tree_gag -f alignments/tree/gag.export.aln.fna
  module srlvTreeAlignmentImporterNucs import AL_UNC_srlv_Tree_pol -f alignments/tree/pol.export.aln.fna
  module srlvTreeAlignmentImporterNucs import AL_UNC_srlv_Tree_env -f alignments/tree/env.export.aln.fna


  # Create the phylogeny
  module raxmlPhylogenyGenerator
    generate nucleotide phylogeny AL_UNC_srlv_Tree_gag -a -o trees/root/gag.export_nucs.tre NEWICK_BOOTSTRAPS 
    generate nucleotide phylogeny AL_UNC_srlv_Tree_pol -a -o trees/root/pol.export_nucs.tre NEWICK_BOOTSTRAPS 
    generate nucleotide phylogeny AL_UNC_srlv_Tree_env -a -o trees/root/env.export_nucs.tre NEWICK_BOOTSTRAPS 
    exit


  # Re-root phylogeny 
  module srlvPhyloUtility 
	reroot-phylogeny \
      --inputFile trees/root/gag.export_nucs.tre NEWICK_BOOTSTRAPS \
      --midpoint \
      --outputFile trees/root/gag.export_nucs-MidpointRerooted.tree NEWICK_BOOTSTRAPS

	reroot-phylogeny \
      --inputFile trees/root/pol.export_nucs.tre NEWICK_BOOTSTRAPS \
      --midpoint \
      --outputFile trees/root/pol.export_nucs-MidpointRerooted.tree NEWICK_BOOTSTRAPS

	reroot-phylogeny \
      --inputFile trees/root/env.export_nucs.tre NEWICK_BOOTSTRAPS \
      --midpoint \
      --outputFile trees/root/env.export_nucs-MidpointRerooted.tree NEWICK_BOOTSTRAP
    exit


  # Export annotations
  module lentiFigTreeAnnotationExporter 
    export figtree-annotation AL_UNC_srlv_Tree_gag -f trees/root/gagFigtreeAnnotations.tsv
    export figtree-annotation AL_UNC_srlv_Tree_pol -f trees/root/polFigtreeAnnotations.tsv
    export figtree-annotation AL_UNC_srlv_Tree_env -f trees/root/envFigtreeAnnotations.tsv
  exit
  
  